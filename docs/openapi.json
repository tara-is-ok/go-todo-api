{
  "openapi": "3.0.3",
  "info": {
    "title": "Todo API",
    "description": "Todo API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "ローカル環境"
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": ["users"],
        "summary": "ユーザー登録",
        "description": "signup user",
        "operationId": "signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "不正なリクエストです"
                }
              }
            }
          },
          "500": {
            "description": "データベース登録失敗",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "既にemailが登録されています"
                }
              }
            }
          }
        }
      }
    },
    "/signin": {
      "post": {
        "description": "signin user",
        "summary": "ログイン",
        "tags": ["users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in successful"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "不正なリクエストです"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "サーバーエラー"
                }
              }
            }
          }
        }
      }
    },
    "/signout": {
      "post": {
        "summary": "サインアウト",
        "description": "signout user",
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "Sign out successful"
          }
        }
      }
    },
    "/csrf": {
      "get": {
        "summary": "トークン取得",
        "description": "Endpoint to get CSRF token",
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "CSRF token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["csrf_token"],
                  "properties": {
                    "csrf_token": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "csrf_token": "your_csrf_token"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "tags": ["todos"],
        "summary": "全件取得",
        "description": "認証済みユーザーのtodoを全て取得する",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "operationId": ""
      },
      "post": {
        "tags": ["todos"],
        "summary": "Create a new todo",
        "description": "Create a new todo for the authenticated user",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "new todo"
                  },
                  "tags": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "8jyfj2coe4xhq"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "zi062cdo9ex2f"
                      },
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/todos/{todoId}": {
      "get": {
        "tags": ["todos"],
        "summary": "Get todo by ID",
        "description": "Get a specific todo by its ID for the authenticated user",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "todoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the todo to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["todos"],
        "summary": "Update todo by ID",
        "description": "Update a specific todo by its ID for the authenticated user",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "todoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the todo to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "updated title"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["todos"],
        "summary": "Delete todo by ID",
        "description": "Delete a specific todo by its ID for the authenticated user",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "todoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the todo to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwt": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "email", "created_at", "updated_at"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string",
            "example": "example@email.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "required": ["id", "email"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Todo": {
        "type": "object",
        "required": [
          "id",
          "title",
          "created_at",
          "updated_at",
          "user",
          "user_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "tags": {
            "type": "array",
            "x-stoplight": {
              "id": "12iz7saj2hugn"
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "TodoResponse": {
        "type": "object",
        "required": ["id", "title", "tags"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "title": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "x-stoplight": {
              "id": "uptcbp635grtk"
            },
            "minItems": 0,
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "title": ""
      },
      "Tag": {
        "title": "Tag",
        "x-stoplight": {
          "id": "kghuiyoezrpwc"
        },
        "type": "object",
        "required": ["id", "name", "created_at", "updated_at"],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "obuv93rbmkmbg"
            }
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "pkip3qpazh7m1"
            }
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "cct1w65n8lcxl"
            }
          },
          "updated_at": {
            "type": "string",
            "x-stoplight": {
              "id": "9v0mcvod3hpm2"
            }
          }
        }
      }
    }
  }
}
